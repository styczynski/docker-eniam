Język	język	subst:sg:nom:m3
D	D	subst:sg:nom:m3
–	–	interp
wieloparadygmatowy	wieloparadygmatowy	adj:sg:nom:m3:pos
język	język	subst:sg:nom:m3
programowania	programować	ger:sg:gen:n:imperf:aff
umożliwiający	umożliwiać	pact:sg:nom:m3:imperf:aff
programowanie	programować	ger:sg:acc:n:imperf:aff
obiektowe	obiektowy	adj:sg:acc:n:pos
,	,	interp
imperatywne	imperatywny	adj:sg:acc:n:pos
oraz	oraz	conj
metaprogramowanie	metaprogramowanie	subst:sg:acc:n
.	.	interp
D	D	subst:sg:nom:m3
został	zostać	praet:sg:m3:perf
stworzony	stworzyć	ppas:sg:nom:m3:perf:aff
przez	przez	prep:acc:nwok
Waltera	Walter	subst:sg:acc:m1
Brighta	Bright	subst:sg:acc:m1
,	,	interp
znanego	znany	adj:sg:acc:m1:pos
jako	jako	prep:nom
twórca	twórca	subst:sg:nom:m1
kompilatora	kompilator	subst:sg:gen:m3
Zortech	Zortech	subst:sg:nom:m3
C	C	subst:sg:nom:m3
.	.	interp
Ma	mieć	fin:sg:ter:imperf
on	on	ppron3:sg:nom:m3:ter:akc:npraep
być	być	inf:imperf
obiektowym	obiektowy	adj:sg:inst:m1:pos
następcą	następca	subst:sg:inst:m1
języka	język	subst:sg:gen:m3
C	C	subst:sg:nom:m3
,	,	interp
jednak	jednak	conj
w	w	prep:loc:nwok
przeciwieństwie	przeciwieństwo	subst:sg:loc:n
do	do	prep:gen
języka	język	subst:sg:gen:m3
C++	C++	subst:sg:nom:m3
nie	nie	qub
jest	być	fin:sg:ter:imperf
w	w	prep:loc:nwok
pełni	pełnia	subst:sg:loc:f
zgodny	zgodny	adj:sg:nom:m3:pos
składniowo	składniowo	adv:pos
z	z	prep:inst:nwok
poprzednikiem	poprzednik	subst:sg:inst:m1
.	.	interp
Możliwe	możliwy	adj:sg:nom:n:pos
jest	być	fin:sg:ter:imperf
jednak	jednak	conj
używanie	używać	ger:sg:nom:n:imperf:aff
skompilowanych	skompilować	ppas:pl:gen:m3:perf:aff
modułów	moduł	subst:pl:gen:m3
napisanych	napisać	ppas:pl:gen:m3:perf:aff
w	w	prep:loc:nwok
języku	język	subst:sg:loc:m3
C	C	subst:sg:nom:m3
oraz	oraz	conj
w	w	prep:loc:nwok
pewnym	pewien	adj:sg:loc:m3:pos
stopniu	stopień	subst:sg:loc:m3
w	w	prep:loc:nwok
C++	C++	subst:sg:loc:m3
.	.	interp
